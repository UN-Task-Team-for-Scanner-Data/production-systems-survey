# Introduction {#sec-intro}

Considerable guidance is available to NSOs on methodological or practical considerations related to the Consumer Price Index (CPI)[^intro-1], however there is little guidance on how to approach technical topics related to designing systems and technical architectures to most efficiently process data. Furthemore, many NSOs are starting to modernize their programs by shifting towards new data sources, which is similarly well supported with methodological and practical guidance[^intro-2], however little technical guidance exists on technical topics related to this transition. There are off course approaches that are discussed and several open source packages are available for price statistics[^intro-3] specifically, however as of early 2025, there is no comprehensive overview of how NSOs could approach technical aspects, as well as how they should modernize.

[^intro-1]: Most notable is the [2020 CPI Manual](https://www.imf.org/en/Data/Statistics/cpi-manual).

[^intro-2]: See the [e-handbook](https://unstats.un.org/wiki/spaces/GWGSD/pages/240910447/Handbook+on+utilising+new+data+sources+in+the+production+of+consumer+price+statistics), developed and maintained by the UN Task Team on Scanner data, for guidance on various aspects of leveraging new data sources.

[^intro-3]: Most notable approach being recommended is Reproducible Analytical Pipelines (or RAPs). See the [NHS RAP Communitiy of Practice](https://nhsdigital.github.io/rap-community-of-practice/) and the [RAP companion](https://ukgovdatascience.github.io/rap_companion/) for more information on the paradigm, and [Price-Marques (2023)](https://unece.org/sites/default/files/2023-05/7.4%20UK_un_systems_railfares_paper.pdf) for an example on the application to consumer price indices. The [IT system requirements section in the e-handbook](https://unstats.un.org/wiki/spaces/GWGSD/pages/240910453/IT+system+requirements) also summarizes several interim considerations and approaches.

To help mitigate this, [Workstream 4 of the UN Task Team on Scanner data](https://unstats.un.org/bigdata/task-teams/scanner/index.cshtml) conducted a detailed survey during the winter of 2025 to (1) provide a detailed summary of the approaches used by NSOs currently and (2) to provide guidance in the form of this report on how NSOs could approach technical topics to better process data for their CPIs. While this report is specific to the state of CPI Production Systems at NSOs around the world in early 2025, our hope is that some of the content in this report is also useful for a wider audience maintaining similar kinds of systems. As such, we attempt to explain our results in a general way and highlight opportunities where our survey approach and findings could be applied in related settings.

## Motivation {#sec-motivation}

In our time working at NSOs, we have encountered some extremely complicated systems that exist in order to produce various analytical and data products such as consumer price indexes, national accounts figures, or labour force statistics. These complicated systems and the teams who maintain them are the subjects of this survey and write up. To reduce ambiguity, we refer to these systems as **Complex Analytical Systems** throughout this report.

Complex Analytical Systems involve significant amounts of code, documentation, and other non-code artifacts such as Excel Workbooks that carry out complex business logic in order to transform input data into output data. Additionally, they are often developed entirely or in large part by people with backgrounds in Economics, Statistics, Mathematics, or another area related to the domain of Official Statistics.

These Complex Analytical Systems differ from traditional software systems in a number of important aspects[^intro-4]:

[^intro-4]: We are not implying that all "traditional" software systems have these characteristics. Rather, we are trying to draw contrast between aspects of Complex Analytical Systems that are most likely to be different from the kinds of systems a software engineer would often develop and maintain.

| Complex Analytical Systems | Typical Software System |
|--------------------------------------|----------------------------------|
| Multiple distinct scripts that are run sequentially and perform complex data manipulations. | One code base representing an entire application. |
| Running time measured in minutes/hours | Running time measured in milliseconds. |
| Human in the loop activities to interpret results. | Completely autonomous system. |
| Ad-hoc (messy) data gathered from whatever data sources are available. | Highly structured data whose schema is designed in lock step with the rest of the system. |
| Batch workloads that are run manually (or semi-manually). | System running continuously in an event loop waiting for user input. |
| Operate on a large fraction of an entire table quickly. | Search for one specific record in a large table quickly. |

Due to differences like those mentioned above, there is not a perfect mapping between best practices from the software engineering world and pain points currently experienced by teams maintaining Complex Analytical Systems. However, there are certainly some best practices from software engineering that are highly appropriate to solve some of the problems faced in the development and maintenance of Complex Analytical Systems.

To this end, we hope our survey can help bridge the gap between well-understood industry best practices from the world of software engineering, and those aspects of Complex Analytical Systems that could benefit from these best practices. Our hope is that the insights gained and the survey methodology deployed may be valuable for other Complex Analytical Systems facing similar challenges.

## Why was this survey the most applicable approach? {#sec-why-run-this-survey}

In our experience, we've noticed that many teams who are responsible for Complex Analytical Systems struggle with managing many aspects of system complexity.

Complex Analytical System business domain teams are typically comprised of individuals with strong analytical skills and significant domain knowledge, however, they often do not have specific training in software engineering concepts. Therefore, they are often not exposed to the significant body of knowledge that has been developed over decades to deal with the kinds of system complexity problems that software developers are routinely exposed to.

We have also found that individuals in these business domains are often missing the vocabulary and concepts to articulate the state of their Complex Analytical Systems. As a result, when these individuals try to explain where they are struggling to a more IT-oriented audience, miscommunication often results, and it becomes difficult to arrive at reasonable solutions.

In this survey, we ask questions that capture several germane aspects of system organization, team organization, technology choices, and business outcomes using language, terms, and conceptual models that are more familiar to individuals on these business domain teams. Our rationale for doing this is threefold.

1.  Measure and describe the state of many Complex Analytical Systems around the world within a specific business domain (CPI Production Systems).

2.  Provide some concrete and practical suggestions to address common areas of struggle within this domain across many NSOs.

3.  Expose people from these business domain teams to software engineering concepts that are relevant in the development and maintenance of Complex Analytical Systems.

While this report is tailored towards a Consumer Prices domain audience, we welcome and encourage readers from different domains to read through this report. We make significant efforts to avoid using too much domain-specific jargon, and present findings in a way that should comprehensible to a more general audience. In @sec-findings, we elaborate on aspects of our survey we believe to have high external validity, provide some practical suggestions that are applicable to Complex Analytical Systems in general, and describe some productive areas of future exploration that are not limited to the Consumer Prices business domain.

## Overview of CPI Production Systems

With the above motivation in mind, we conduct this survey for CPI Production Systems specifically, which are a kind of Complex Analytical System described in @sec-motivation. More precisely, these systems take data on the price of consumer goods purchased throughout an economy and calculate period-over-period price changes of these goods and services. These price changes are ultimately mapped to a taxonomy of product categories, with the highest level of the taxonomy being the monthly "all items" CPI that is commonly used when discussing the overall level of inflation.

The recent adoption of alternative data sources[^intro-5] in the calculation of CPIs has further increased the complexity of these systems, and has increased the importance of skills in newly emerging disciplines such as [Data Science](https://en.wikipedia.org/wiki/Data_science), [Data Engineering](https://en.wikipedia.org/wiki/Data_engineering), and [Analytics Engineering](https://www.getdbt.com/what-is-analytics-engineering).

[^intro-5]: In the context of CPI Production Systems, alternative data sources refer to data such as retailer scanner and web-scraped data that can be used to calculate the component price changes that are used in CPI calculations.

## Related Work

We borrow and adapt several ideas presented in @skelton2019team such as the concepts of [Stream-aligned teams and the Flow of change](https://teamtopologies.com/key-concepts) in our survey. These concepts (discussed in greater detail in the following sections) can be applied to understand how teams are organized around the various steps in a complex data processing workflow.

We also borrow a number of ideas from @forsgren2018accelerate. Particularly, multiple of the DevOps Research and Assessment (DORA) metrics they present are highly relevant in measuring the business outcomes of teams that maintain CPI systems[^intro-6].

[^intro-6]: We use slightly different terminology to refer to some of these concepts throughout the survey in order to use language that our target audience is most likely familiar with.

We believe that multiple ideas presented in @dehghani2022data are highly applicable to the CPI Systems under study. Specifically, we believe that the concept of [Data-as-a-Product](https://www.thoughtworks.com/en-ca/insights/articles/leveraging-data-as-a-product-a-strategic-imperative-for-business-leaders) (and teams organized around these Data Products) provides a useful framework for thinking about how these systems and teams interact with one another. We also contrast domain-oriented decentralized teams with centralized teams.

Although we do not make specific references to it in our survey, we believe the Reproducible Analytical Pipeline (RAP) work by @RAPsite does a good job at explaining how teams can introduce relevant tools and practices to workloads oriented around data processing.[^intro-7]

[^intro-7]: See [Price-Marques (2023)](https://unece.org/sites/default/files/2023-05/7.4%20UK_un_systems_railfares_paper.pdf) for a good case study on the application of RAP to production price statistics, and a [training session on RAP for price statistics by ESCAP](https://escap-sd.github.io/ESCAP_RAP_class/docs/) in 2024, specifically applied to web scraping.

Throughout this write up, we distinguish between software systems and IT professionals being **embedded in domain teams** versus being centralized **outside of domain teams**. Organizing software system architecture around business domains is not a new idea in software engineering (see Domain Driven Design by @evans2004domain, and more recently Software Architecture: The Hard Parts by @ford2021software and Fundamentals of Software Architecture by @richards2020fundamentals, for example). However, we believe this distinction may not be well understood or formalized in the context of the teams who maintain the kinds of Complex Analytical Systems described in @sec-why-run-this-survey, so we pay special attention to this distinction throughout this write up.

## The survey process and aspects of the collected data

We developed the survey during the fall of 2024 and ran it between January and February 2024. With support from the UN-CEBD and UNECE, we compiled and reached out to NSOs around the world. We prioritized reaching out directly to individuals in Price Statistics divisions at each NSOs, or where no contact was known, we inquired with the overall organization and requested that the survey link be forwarded to the Price Statistics team of that organization. Individuals were asked to submit one response from the organization, and where applicable, data editing was done to ensure a robust dataset was finalized.

The response rate was x% or N NSOs. Every major geographic region of the world is represented in the survey. NSOs that answered included those advanced in their modernization and the use of new data sources and those that focused on traditional methods. While self-selection bias is possible due to only some NSOs answering, such as due to the time commitment necessary and the complexity of the survey. It is likely that misunderstanding could have affected several responder answers, which we note when discussing specific topics. In summary though, despite the likelihood for self-selection bias and some misunderstanding of the questions asked, we believe the coverage is good.

## How This Report Is Organized

This report is presented in the order that the survey was conducted, with findings presented along the way.

-   @sec-concepts covers the key conceptual models and terminology used to articulate concepts about system and team organization.

-   @sec-sys-teams analyzes our findings with respect to system and team organization.

-   @sec-tools-tech covers some high-level questions on the use of tools and technologies required to develop and maintain CPI Production Systems.

-   @sec-age covers questions about the age and update frequency of systems.

-   @sec-num-ppl covers questions about the number of individuals required to participate in system changes.

-   @sec-lead-time covers questions about a concept called [lead time](https://en.wikipedia.org/wiki/Lead_time), which measures the end-to-end time required to implement a change to a software component.

-   @sec-alt-data covers questions about the usage of alternative data in CPI Production Systems.

-   @sec-challenges covers the challenges CPI Production System teams face with respect to maintaining their systems.

-   @sec-findings concludes with a summary of the most notable findings from the survey, some practical insights to address some common areas of struggle, and some areas of future work.

## Note on Confidentiality and Privacy

As part of the administration of this survey, we ensured respondents that their data will be treated confidentiality. Therefore, no individual response data are made available in this report; all results presented are aggregated over all respondents.