# Challenges {#sec-challenges}

```{r message = FALSE}
#| echo: false

library(dplyr)
library(ggplot2)

df <- read.csv("./data/results.csv")

# Overall Challenges

df <- df |> rename(
  rank1=colnames(df)[242],
  rank2=colnames(df)[243],
  rank3=colnames(df)[244],
  rank4=colnames(df)[245],
  rank5=colnames(df)[246],
  rank6=colnames(df)[247],
  rank7=colnames(df)[248],
  rank8=colnames(df)[249],
  rank9=colnames(df)[250],
  rank10=colnames(df)[251],
  rank11=colnames(df)[252],
  rank12=colnames(df)[253],
  rank13=colnames(df)[254],
  rank14=colnames(df)[255],
  rank15=colnames(df)[256],
  rank16=colnames(df)[257],
)

# Shorten value names
df[df == "Lack of skills (e.g., people do not have the skills to maintain complex systems)."] = "Lack of Skills"

df[df == "Lots of manual tasks that are not automated/cannot be automated (e.g., a person has to manually review system outputs to validate them)."] = "Manual Tasks"

df[df == "Managing the interaction between systems (e.g., integration challenges, passing inputs/outputs between systems)."] = "System Interactions"

df[df == "Staff/resourcing challenges (e.g., not enough people to do the work, all of our time is spent maintaining existing systems, so there is little/no capacity to develop new systems)."] = "Lack of Staff"

df[df == "Communication challenges between teams (e.g., prices domain team struggles to communicate requirements with corporate IT)."] = "Cross-Domain Communication"

df[df == "Complexity within a system (e.g., managing complex code, managing large quantities of code)."] = "System Complexity"

df[df == "Human coordination/communication overhead (e.g., lots of people need to be involved with every decision)."] = "Too Much Coordination"

df[df == "We don't have a \"testing\" environment, so we have to be really confident that our changes are correct before testing them live in our production system."] = "No Testing Environment"

df[df == "None of these (we do not face any challenges)."] = "No Challenges"

df[df == "Lack of software tools (e.g., certain necessary software is not approved by corporate IT, a commercial software product cannot be procured)."] = "Insufficient Software"

df[df ==  "Verifying the correctness of data (e.g., input data often contains mistakes, significant time is spent negotiating error fixes with the data provider)."] = "Validating Data"

df[df == "Lack of hardware (e.g., the only device provided is a single work computer, and this device does not have enough CPU/memory/storage to work with large volumes of data)."] = "Insufficient Hardware"

df[df == "Verifying that a system behaves correctly (e.g., the price index calculation logic is correct)."] = "Verifying Correctness"

df[df == "Keeping track of which version of a system was used to produce a certain version of an output."] = "Version Control"

df[df == "Organizational politics (e.g., mandate conflicts between corporate IT and the prices domain team)."] = "Organizational Politics"

df[df == "Bureaucratic and process challenges (e.g., many \"approval\" steps are required to move work forward)."] = "Bureaucracy Challenges"


# Overlay all histograms on one plot
dat <- data.frame(
  Frequency = c(
    df$rank1,
    df$rank2,
    df$rank3,
    df$rank4,
    df$rank5,
    df$rank6,
    df$rank7,
    df$rank8,
    df$rank9,
    df$rank10,
    df$rank11,
    df$rank12,
    df$rank13,
    df$rank14,
    df$rank15,
    df$rank16
  ),
  Ranking = c(
    rep("Rank 1", each=nrow(df)),
    rep("Rank 2", each=nrow(df)),
    rep("Rank 3", each=nrow(df)),
    rep("Rank 4", each=nrow(df)),
    rep("Rank 5", each=nrow(df)),
    rep("Rank 6", each=nrow(df)),
    rep("Rank 7", each=nrow(df)),
    rep("Rank 8", each=nrow(df)),
    rep("Rank 9", each=nrow(df)),
    rep("Rank 10", each=nrow(df)),
    rep("Rank 11", each=nrow(df)),
    rep("Rank 12", each=nrow(df)),
    rep("Rank 13", each=nrow(df)),
    rep("Rank 14", each=nrow(df)),
    rep("Rank 15", each=nrow(df)),
    rep("Rank 16", each=nrow(df))
  )
)

# Replace empty string with NA
dat <- dat[dat$Frequency != "",]
dat <- dat[!is.na(dat$Frequency),]

ggplot(dat,aes(x=Frequency, fill=Ranking)) +
  geom_bar(alpha=1, position="stack") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```